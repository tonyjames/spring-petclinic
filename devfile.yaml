schemaVersion: 2.0.0
metadata:
  name: spring-petclinic
projects:
  - name: spring-petclinic
    source:
      location: 'https://github.com/pbruszewski/spring-petclinic.git'
      startPoint: master
      type: git
components:
  - id: redhat/java8/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: 8080-tcp
        port: 8080
    memoryLimit: 4G
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    alias: maven
    image: 'registry.redhat.io/codeready-workspaces/plugin-java8-rhel8@sha256:bb8ec9c4964e39b335be589f027c4b5ec866fe5f742c7181473e70fff717655d'
    env:
      - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
commands:
  - id: Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: 'MAVEN_OPTS="-Xmx1G" && mvn -Duser.home=${HOME} -DskipTests clean install'
        component: maven
  - id: Run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: 'MAVEN_OPTS="-Xmx1G" && mvn -Duser.home=${HOME} spring-boot:run'
        component: maven
  - id: Run-in-debug-mode
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: |-
          mvn  -Duser.home=${HOME} spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug
           -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
        component: maven
  - id: Run-tests
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} verify'
        component: maven
  - id: Log-into-deployment-cluster
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: |
          echo
          echo "Before you can deploy this application to an openshift cluster,"
          echo "you must run 'oc login ...' in the maven terminal."
          echo
        component: maven
  - id: Deploy-to-OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: 'mvn fabric8:deploy -Popenshift -DskipTests'
        component: maven
  - id: Debug-remote-java-application
    actions:
      - referenceContent: |
          {
           "version": "0.2.0",
           "configurations": [
             {
               "type": "java",
               "name": "Debug (Attach) - Remote",
               "request": "attach",
               "hostName": "localhost",
               "port": 5005
             }]
           }
        type: vscode-launch
